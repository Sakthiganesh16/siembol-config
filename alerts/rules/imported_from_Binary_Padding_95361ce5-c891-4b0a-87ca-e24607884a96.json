{
  "rule_name" : "imported_from_Binary_Padding_95361ce5-c891-4b0a-87ca-e24607884a96",
  "rule_author" : "siembol",
  "rule_version": 1,
  "rule_description" : "Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This rule detect using dd and truncate to add a junk data to file.",
  "source_type" : "macos",
  "matchers" : [ {
    "matchers" : [ {
      "matchers" : [ {
        "field" : "Image",
        "data" : ".*\\Q/truncate\\E$",
        "is_enabled" : true,
        "matcher_type" : "REGEX_MATCH",
        "is_negated" : false,
        "case_insensitive" : false,
        "starts_with" : false,
        "ends_with" : false
      }, {
        "field" : "CommandLine",
        "data" : ".*\\Q-s\\E.*",
        "is_enabled" : true,
        "matcher_type" : "REGEX_MATCH",
        "is_negated" : false,
        "case_insensitive" : false,
        "starts_with" : false,
        "ends_with" : false
      } ],
      "is_enabled" : true,
      "matcher_type" : "COMPOSITE_AND",
      "is_negated" : false,
      "case_insensitive" : false,
      "starts_with" : false,
      "ends_with" : false
    }, {
      "matchers" : [ {
        "matchers" : [ {
          "field" : "Image",
          "data" : ".*\\Q/dd\\E$",
          "is_enabled" : true,
          "matcher_type" : "REGEX_MATCH",
          "is_negated" : false,
          "case_insensitive" : false,
          "starts_with" : false,
          "ends_with" : false
        }, {
          "field" : "CommandLine",
          "data" : ".*\\Qif=\\E.*",
          "is_enabled" : true,
          "matcher_type" : "REGEX_MATCH",
          "is_negated" : false,
          "case_insensitive" : false,
          "starts_with" : false,
          "ends_with" : false
        } ],
        "is_enabled" : true,
        "matcher_type" : "COMPOSITE_AND",
        "is_negated" : false,
        "case_insensitive" : false,
        "starts_with" : false,
        "ends_with" : false
      }, {
        "field" : "CommandLine",
        "data" : ".*\\Qof=\\E.*",
        "is_enabled" : true,
        "matcher_type" : "REGEX_MATCH",
        "is_negated" : true,
        "case_insensitive" : false,
        "starts_with" : false,
        "ends_with" : false
      } ],
      "is_enabled" : true,
      "matcher_type" : "COMPOSITE_AND",
      "is_negated" : false,
      "case_insensitive" : false,
      "starts_with" : false,
      "ends_with" : false
    } ],
    "is_enabled" : true,
    "matcher_type" : "COMPOSITE_OR",
    "is_negated" : false,
    "case_insensitive" : false,
    "starts_with" : false,
    "ends_with" : false
  } ],
  "tags" : [ {
    "tag_name" : "sigma_id",
    "tag_value" : "95361ce5-c891-4b0a-87ca-e24607884a96"
  }, {
    "tag_name" : "sigma_tags",
    "tag_value" : "[attack.defense_evasion, attack.t1027.001]"
  }, {
    "tag_name" : "sigma_fp",
    "tag_value" : "[Legitimate script work]"
  } ],
  "rule_protection" : {
    "max_per_hour" : 30,
    "max_per_day" : 100
  }
}